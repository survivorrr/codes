<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/tx/spring-jms-3.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/tx/spring-lang-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
		
		<!-- 这是spring的配置文件，做了hibernate的配置，所以hibernate.cfg.xml这个hibernate的主配置文件（没有结合spring之前用的）就不需要了 -->
		<!-- 这是spring的配置文件，做了hibernate的配置，所以hibernate.cfg.xml这个hibernate的主配置文件（没有结合spring之前用的）就不需要了 -->
		<!-- 这是spring的配置文件，做了hibernate的配置，所以hibernate.cfg.xml这个hibernate的主配置文件（没有结合spring之前用的）就不需要了 -->
		<!-- 这是spring的配置文件，做了hibernate的配置，所以hibernate.cfg.xml这个hibernate的主配置文件（没有结合spring之前用的）就不需要了 -->
		
	<!-- 配置数据库连接池 -->
	<util:properties id="db" location="classpath:conf/db.properties"/>
	<bean id="dbcp" class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 用ORGL读取配置文件，当然也可以#{db.driver}这样来读取 -->
		<property name="driverClassName" value="#{db['jdbc.driver']}"></property>
		<property name="url" value="#{db['jdbc.url']}"></property>
		<property name="username" value="#{db['jdbc.username']}"></property>
		<property name="password" value="#{db['jdbc.password']}"></property>
		<property name="maxActive" value="#{db['jdbc.max.active']}"></property>
	</bean>
	
	<!-- 配置Hibernate的SessionFactory -->
	<!-- 配置LocalSessionFactoryBean返回的Bean类型是SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dbcp"></property>
		<!-- 配置Hibernate的参数：方言，显示SQL等 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<!-- 配置映射文件 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:hbm/User.hbm.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置HibernateTemplate(使用HibernateTemplate比使用session更方便，所以配置HibernateTemplate) -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 声明式事务管理 -->
	<tx:annotation-driven transaction-manager="txManager"></tx:annotation-driven>
	<!-- 配置事务管理器(跟mybatis配置查不多，只是引用的类不一样，但是效果是一样的) -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 组件扫描 -->
	<context:component-scan base-package="cn.tedu.note.dao"></context:component-scan>
</beans>








